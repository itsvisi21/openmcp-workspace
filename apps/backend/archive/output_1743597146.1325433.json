{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 4}, "tests": {"0": {"status": "ERROR", "message": "db = <sqlalchemy.orm.session.Session object at 0x000001D761EF6C50>\nstorage_service = <app.services.test_storage.TestStorageService object at 0x000001D761F4B910>\n\n    @pytest.fixture(scope=\"function\")\n    def client(db, storage_service):\n        \"\"\"Create a test client with a fresh database session.\"\"\"\n        def override_get_db():\n            try:\n                yield db\n            finally:\n                pass\n    \n        def override_get_context_service(db: Session = Depends(get_db)) -> ContextService:\n            return ContextService(db, storage_service)\n    \n        app.dependency_overrides[get_db] = override_get_db\n>       app.dependency_overrides[get_context_service] = override_get_context_service\nE       NameError: name 'get_context_service' is not defined\n\ntests\\conftest.py:68: NameError\n", "test_name": "test_create_context", "rerun": "0"}, "1": {"status": "ERROR", "message": "db = <sqlalchemy.orm.session.Session object at 0x000001D761FDC150>\nstorage_service = <app.services.test_storage.TestStorageService object at 0x000001D761FDC2D0>\n\n    @pytest.fixture(scope=\"function\")\n    def client(db, storage_service):\n        \"\"\"Create a test client with a fresh database session.\"\"\"\n        def override_get_db():\n            try:\n                yield db\n            finally:\n                pass\n    \n        def override_get_context_service(db: Session = Depends(get_db)) -> ContextService:\n            return ContextService(db, storage_service)\n    \n        app.dependency_overrides[get_db] = override_get_db\n>       app.dependency_overrides[get_context_service] = override_get_context_service\nE       NameError: name 'get_context_service' is not defined\n\ntests\\conftest.py:68: NameError\n", "test_name": "test_list_contexts", "rerun": "0"}, "2": {"status": "ERROR", "message": "db = <sqlalchemy.orm.session.Session object at 0x000001D761F65E50>\nstorage_service = <app.services.test_storage.TestStorageService object at 0x000001D761F65390>\n\n    @pytest.fixture(scope=\"function\")\n    def client(db, storage_service):\n        \"\"\"Create a test client with a fresh database session.\"\"\"\n        def override_get_db():\n            try:\n                yield db\n            finally:\n                pass\n    \n        def override_get_context_service(db: Session = Depends(get_db)) -> ContextService:\n            return ContextService(db, storage_service)\n    \n        app.dependency_overrides[get_db] = override_get_db\n>       app.dependency_overrides[get_context_service] = override_get_context_service\nE       NameError: name 'get_context_service' is not defined\n\ntests\\conftest.py:68: NameError\n", "test_name": "test_get_context", "rerun": "0"}, "3": {"status": "ERROR", "message": "db = <sqlalchemy.orm.session.Session object at 0x000001D761FDDA10>\nstorage_service = <app.services.test_storage.TestStorageService object at 0x000001D761FDD6D0>\n\n    @pytest.fixture(scope=\"function\")\n    def client(db, storage_service):\n        \"\"\"Create a test client with a fresh database session.\"\"\"\n        def override_get_db():\n            try:\n                yield db\n            finally:\n                pass\n    \n        def override_get_context_service(db: Session = Depends(get_db)) -> ContextService:\n            return ContextService(db, storage_service)\n    \n        app.dependency_overrides[get_db] = override_get_db\n>       app.dependency_overrides[get_context_service] = override_get_context_service\nE       NameError: name 'get_context_service' is not defined\n\ntests\\conftest.py:68: NameError\n", "test_name": "test_delete_context", "rerun": "0"}}, "suite_name": "tests/test_context.py"}}}, "date": "April 02, 2025", "start_time": 1743597083.068648, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "4", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "4"}