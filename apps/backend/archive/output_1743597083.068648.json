{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 4}, "tests": {"0": {"status": "ERROR", "message": "db = <sqlalchemy.orm.session.Session object at 0x000001FD88087B10>\nstorage_service = <app.services.test_storage.TestStorageService object at 0x000001FD8811B990>\n\n    @pytest.fixture(scope=\"function\")\n    def client(db, storage_service):\n        \"\"\"Create a test client with a fresh database session.\"\"\"\n        def override_get_db():\n            try:\n                yield db\n            finally:\n                pass\n    \n>       def override_get_context_service(db: Session = Depends(get_db)) -> ContextService:\nE       NameError: name 'Session' is not defined\n\ntests\\conftest.py:64: NameError\n", "test_name": "test_create_context", "rerun": "0"}, "1": {"status": "ERROR", "message": "db = <sqlalchemy.orm.session.Session object at 0x000001FD881B0090>\nstorage_service = <app.services.test_storage.TestStorageService object at 0x000001FD881B0390>\n\n    @pytest.fixture(scope=\"function\")\n    def client(db, storage_service):\n        \"\"\"Create a test client with a fresh database session.\"\"\"\n        def override_get_db():\n            try:\n                yield db\n            finally:\n                pass\n    \n>       def override_get_context_service(db: Session = Depends(get_db)) -> ContextService:\nE       NameError: name 'Session' is not defined\n\ntests\\conftest.py:64: NameError\n", "test_name": "test_list_contexts", "rerun": "0"}, "2": {"status": "ERROR", "message": "db = <sqlalchemy.orm.session.Session object at 0x000001FD881322D0>\nstorage_service = <app.services.test_storage.TestStorageService object at 0x000001FD88132B10>\n\n    @pytest.fixture(scope=\"function\")\n    def client(db, storage_service):\n        \"\"\"Create a test client with a fresh database session.\"\"\"\n        def override_get_db():\n            try:\n                yield db\n            finally:\n                pass\n    \n>       def override_get_context_service(db: Session = Depends(get_db)) -> ContextService:\nE       NameError: name 'Session' is not defined\n\ntests\\conftest.py:64: NameError\n", "test_name": "test_get_context", "rerun": "0"}, "3": {"status": "ERROR", "message": "db = <sqlalchemy.orm.session.Session object at 0x000001FD881B2790>\nstorage_service = <app.services.test_storage.TestStorageService object at 0x000001FD881B2B50>\n\n    @pytest.fixture(scope=\"function\")\n    def client(db, storage_service):\n        \"\"\"Create a test client with a fresh database session.\"\"\"\n        def override_get_db():\n            try:\n                yield db\n            finally:\n                pass\n    \n>       def override_get_context_service(db: Session = Depends(get_db)) -> ContextService:\nE       NameError: name 'Session' is not defined\n\ntests\\conftest.py:64: NameError\n", "test_name": "test_delete_context", "rerun": "0"}}, "suite_name": "tests/test_context.py"}}}, "date": "April 02, 2025", "start_time": 1743596927.439373, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "4", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "4"}